@using Entities.Domains
@using Entities.Repositories
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<BookVM>
@inject IUnitOfWork unitOfWork

@{
    ViewData["Title"] = "Home Page";
    Layout = "_User";

    string? titleString = "Featured";

    if (Model != null && Model.Any())
    {
        var categoryName = Model.FirstOrDefault()?.CategoryName;
        var columnValue = Model.First().CategoryName;
        bool title = Model.All(r => r.CategoryName == columnValue);
        if (title)
            titleString = columnValue;
    }
}


<section class="py-5 bg-light">
    <div class="container px-4 px-lg-5 mt-5">
        <h2 class="text-center mb-5" style="font-weight: bold; color: #0d6efd; font-size: 2.5rem;">@(titleString) Books</h2>
        <!-- Book List -->
        <div class="row gx-4 gx-lg-5 row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 justify-content-center">
            @if (Model != null && Model.Any())
            {
                foreach (var item in Model)
                {
                    // Fetching ratings
                    var rateValue = unitOfWork.GetRepository<Rate>()
                    .GetAllAsync(b => b.BookId == item.Id)
                    .GetAwaiter()
                    .GetResult();

                    <div class="col mb-5">
                        <div class="card h-100 shadow-lg border-0 rounded" style="overflow:hidden;">
                            <!-- Sale Badge -->
                            @if (item.Stock > 0)
                            {
                                <div class="badge bg-success text-white position-absolute" style="top: 0.5rem; right: 0.5rem;">
                                    Sale
                                </div>
                            }

                            <!-- Book Cover Image -->
                            <div class="card-img-top position-relative" style="overflow: hidden; height: 350px;">
                                <a href="~/covers/@(item.ImagePath ?? "default/banner-image.png")">
                                    <img class="img-fluid w-100 h-100" style="object-fit: cover; transition: transform 0.3s;" src="~/covers/@(item.ImagePath ?? "default/banner-image.png")" alt="@item.Title" />
                                </a>
                            </div>
                            <!-- Book Details -->
                            <div class="card-body p-3 text-center">
                                <h5 class="fw-bolder" style="color: #444; font-size: 1.25rem;">@item.Title</h5>

                                <!-- Star Rating -->
                                <div class="d-flex justify-content-center mb-2">
                                    @if (rateValue != null && rateValue.Count() != 0)
                                    {
                                        double avrage = rateValue.Average(x => x.Rating);
                                        for (int i = 0; i < Convert.ToInt32(avrage); i++)
                                        {
                                            <i class="bi-star-fill" style="color: #f1c40f;"></i>
                                        }
                                        if (avrage != 5)
                                        {
                                            for (int i = 0; i < (5 - Convert.ToInt32(avrage)); i++)
                                            {
                                                <i class="bi-star" style="color: #ddd;"></i>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        for (int i = 0; i < 5; i++)
                                        {
                                            <i class="bi-star" style="color: #ddd;"></i>
                                        }
                                    }
                                </div>

                                <!-- Pricing -->
                                <p class="mb-1" style="font-size: 0.9em; color: #666;">Price For Sale: @item.SalePrice.ToString("C")</p>
                                <p style="font-size: 0.9em; color: #666;">Price For Rent: @item.RentePrice.ToString("C")</p>
                            </div>

                            <!-- View Details Button -->
                            <div class="card-footer p-3 pt-0 border-top-0 bg-transparent text-center">
                                <a class="btn btn-primary mt-auto" style="font-size: 0.9em; padding: 0.6em 1.2em; border-radius: 30px;" asp-action="Detials" asp-area="Customer" asp-route-id="@item.Id">View Details</a>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <!-- Empty Message -->
                <div class="text-center">
                    <h2 class="text-muted">No Books Available</h2>
                    <p>Check back later for more selections.</p>
                </div>
            }
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-4">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { Page = page }),
                     new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
        </div>
    </div>

    <!-- Custom CSS for Hover Effects and Responsiveness -->
    <style>
        .card {
            transition: transform 0.3s, box-shadow 0.3s;
        }

            .card:hover {
                box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
                transform: translateY(-5px);
            }

        .card-img-top img {
            transition: transform 0.3s ease-in-out;
        }

        .card-img-top:hover img {
            transform: scale(1.1);
        }

        .bi-star-fill, .bi-star {
            font-size: 1.5rem;
            padding-right: 0.1rem;
        }

        /* Pagination Styles */
        .page-item .page-link {
            border-radius: 50%;
            padding: 0.5em 0.75em;
            margin: 0 0.2em;
            color: #333;
            border: 1px solid #ddd;
            transition: background-color 0.3s;
        }

        .page-item.active .page-link {
            background-color: #007bff;
            border-color: #007bff;
            color: #fff;
        }

        .page-item .page-link:hover {
            background-color: #0056b3;
            color: #fff;
            border-color: #0056b3;
        }
    </style>
</section>
